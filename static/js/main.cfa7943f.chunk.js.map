{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","ALL","ACTIVE","COMPLETED","INPUT","query","initialState","status","filterReducer","_objectSpread","value","initialTodos","todosReducer","todos","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","title","toLowerCase","includes","visibleTodos","completed","_jsxs","_Fragment","children","_jsx","className","map","id","onClick","concat","TodoFilter","setInput","onSubmit","event","preventDefault","onChange","e","setFilter","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","_useState","useState","email","name","_useState2","_slicedToArray","user","setUser","_useState3","_useState4","isLoading","setIsLoading","useEffect","fetchUser","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","abrupt","userId","sent","t0","Error","String","finish","stop","apply","href","App","todosFetch","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cfa7943f.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","const ALL = 'ALL';\nconst ACTIVE = 'ACTIVE';\nconst COMPLETED = 'COMPLETED';\nconst INPUT = 'INPUT';\n\ntype AllAction = { type: typeof ALL, payload: string };\ntype ActiveAction = { type: typeof ACTIVE, payload: string };\ntype CompletedAction = { type: typeof COMPLETED, payload: string };\ntype InputAction = { type: typeof INPUT, payload: string };\n\ntype Action = ActiveAction | AllAction | CompletedAction | InputAction;\n\nconst all = (query: string):AllAction => (\n  { type: ALL, payload: query });\n\nconst active = (query: string):ActiveAction => (\n  { type: 'ACTIVE', payload: query });\n\nconst completed = (query: string): CompletedAction => (\n  { type: 'COMPLETED', payload: query });\n\nconst input = (query: string): InputAction => (\n  { type: 'INPUT', payload: query });\n\nexport const actions = {\n  all, active, completed, input,\n};\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case ACTIVE:\n      return {\n        query: action.payload,\n        status: 'active',\n      };\n    case COMPLETED:\n      return {\n        query: action.payload,\n        status: 'completed',\n      };\n    case ALL:\n      return {\n        query: action.payload,\n        status: 'all',\n      };\n    case INPUT:\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nconst GET = 'todos/GET';\n\ntype SetTodosAction = {\n  type: typeof GET,\n  payload: Todo[]\n};\ntype Action = SetTodosAction;\n\nconst setTodos = (value: Todo[]): SetTodosAction => (\n  { type: GET, payload: value });\n\nconst isLoading = (value: boolean) => (\n  { type: 'todos/LOADING', payload: value });\n\nexport const actions = { setTodos, isLoading };\n\nconst initialTodos: Todo[] = [];\n\nconst todosReducer = (todos = initialTodos, action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/GET':\n      return action.payload;\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n  const todos = useAppSelector(state => state.todos.filter(\n    (todo: Todo) => {\n      return todo.title.toLowerCase().includes(filter.query.toLowerCase());\n    },\n  ));\n  const isSelected = (id: number) => currentTodo?.id === id;\n  const visibleTodos = () => {\n    switch (filter.status) {\n      case 'all':\n        return todos.filter((todo: Todo) => todo);\n      case 'active':\n        return todos.filter((todo: Todo) => todo.completed);\n      case 'completed':\n        return todos.filter((todo: Todo) => !todo.completed);\n      default:\n        return todos;\n    }\n  };\n\n  return (\n    <>\n      {\n        filter.query && !visibleTodos().length && (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )\n      }\n      <table className=\"table is-narrow is-fullwidth\">\n        {\n          !!visibleTodos().length && (\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n          )\n        }\n        <tbody>\n          {visibleTodos().map((todo: Todo) => {\n            return (\n              <tr\n                key={todo.id}\n                data-cy=\"todo\"\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={\n                    todo.completed ? 'has-text-success' : 'has-text-danger'\n                  }\n                  >\n                    {todo.title}\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      dispatch(actions.setTodo(todo));\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className={`far ${isSelected(todo.id) ? 'fa-eye-slash' : 'fa-eye'}`} />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const filter = useAppSelector(state => state.filter);\n  const setFilter = (value: string) => {\n    switch (value) {\n      case 'active':\n        return dispatch(actions.active(filter.query));\n      case 'completed':\n        return dispatch(actions.completed(filter.query));\n      default:\n        return dispatch(actions.all(filter.query));\n    }\n  };\n\n  const setInput = (value: string) => {\n    return dispatch(actions.input(value));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {filter.query\n            && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setInput('');\n                }}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n  const [user, setUser] = useState({ email: '', name: '' });\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (!currentTodo) {\n        return;\n      }\n\n      try {\n        setIsLoading(true);\n        const result = await getUser(currentTodo.userId);\n\n        setUser(result);\n      } catch (error) {\n        throw new Error(String(error));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? <Loader />\n        : currentTodo && (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div\n                className=\"modal-card-title has-text-weight-medium\"\n                data-cy=\"modal-header\"\n              >\n                Todo #\n                {currentTodo.id}\n              </div>\n\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                type=\"button\"\n                className=\"delete\"\n                data-cy=\"modal-close\"\n                onClick={() => {\n                  dispatch(actions.removeTodo());\n                }}\n              />\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\" data-cy=\"modal-title\">{currentTodo.title}</p>\n\n              <p className=\"block\" data-cy=\"modal-user\">\n                {!currentTodo.completed\n                  ? <strong className=\"has-text-danger\">Planned</strong>\n                  : <strong className=\"has-text-success\">Done</strong>}\n                {' by '}\n                <a href={`mailto:${user.email}`}>{user.name}</a>\n              </p>\n            </div>\n          </div>\n        )}\n\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    const todosFetch = async () => {\n      try {\n        setIsLoading(true);\n        const result = await getTodos();\n\n        dispatch(actions.setTodos(result));\n      } catch (error) {\n        throw new Error(String(error));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    todosFetch();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            {isLoading ? <Loader />\n              : (\n                <>\n                  <h1 className=\"title\">Todos:</h1>\n                  <div className=\"block\">\n                    <TodoFilter />\n                  </div>\n                  <div className=\"block\">\n                    <TodoList />\n                  </div>\n                </>\n              )}\n          </div>\n        </div>\n      </div>\n\n      {currentTodo\n        && (\n          <TodoModal />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}