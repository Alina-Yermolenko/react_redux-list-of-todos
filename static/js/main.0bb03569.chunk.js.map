{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","ALL","ACTIVE","COMPLETED","INPUT","query","initialState","status","filterReducer","_objectSpread","value","initialTodos","todosReducer","todos","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","dispatch","title","includes","visibleTodos","completed","_jsxs","_Fragment","children","_jsx","className","map","id","onClick","concat","TodoFilter","setInput","toLowerCase","onSubmit","event","preventDefault","onChange","e","setFilter","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","href","App","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","useEffect","todosFetch","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","wrap","_context","prev","next","sent","t0","Error","String","finish","stop","apply","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bb03569.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return action.payload;\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","const ALL = 'ALL';\nconst ACTIVE = 'ACTIVE';\nconst COMPLETED = 'COMPLETED';\nconst INPUT = 'INPUT';\n\ntype AllAction = { type: typeof ALL, payload: string };\ntype ActiveAction = { type: typeof ACTIVE, payload: string };\ntype CompletedAction = { type: typeof COMPLETED, payload: string };\ntype InputAction = { type: typeof INPUT, payload: string };\n\ntype Action = ActiveAction | AllAction | CompletedAction | InputAction;\n\nconst all = (query: string):AllAction => (\n  { type: ALL, payload: query });\n\nconst active = (query: string):ActiveAction => (\n  { type: 'ACTIVE', payload: query });\n\nconst completed = (query: string): CompletedAction => (\n  { type: 'COMPLETED', payload: query });\n\nconst input = (query: string): InputAction => (\n  { type: 'INPUT', payload: query });\n\nexport const actions = {\n  all, active, completed, input,\n};\n\nconst initialState = {\n  query: '',\n  status: 'all',\n};\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case ACTIVE:\n      return {\n        query: action.payload,\n        status: 'active',\n      };\n    case COMPLETED:\n      return {\n        query: action.payload,\n        status: 'completed',\n      };\n    case ALL:\n      return {\n        query: action.payload,\n        status: 'all',\n      };\n    case INPUT:\n      return {\n        ...state,\n        query: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\nconst GET = 'todos/GET';\n\ntype SetTodosAction = {\n  type: typeof GET,\n  payload: Todo[]\n};\ntype Action = SetTodosAction;\n\nconst setTodos = (value: Todo[]): SetTodosAction => (\n  { type: GET, payload: value });\n\nconst isLoading = (value: boolean) => (\n  { type: 'todos/LOADING', payload: value });\n\nexport const actions = { setTodos, isLoading };\n\nconst initialTodos: Todo[] = [];\n\nconst todosReducer = (todos = initialTodos, action: Action): Todo[] => {\n  switch (action.type) {\n    case 'todos/GET':\n      return action.payload;\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const filter = useAppSelector(state => state.filter);\n  const todos = useAppSelector(state => state.todos.filter(\n    (todo: Todo) => {\n      return todo.title.includes(filter.query);\n    },\n  ));\n  const isSelected = (id: number) => currentTodo?.id === id;\n  const visibleTodos = () => {\n    switch (filter.status) {\n      case 'all':\n        return todos.filter((todo: Todo) => todo);\n      case 'active':\n        return todos.filter((todo: Todo) => todo.completed);\n      case 'completed':\n        return todos.filter((todo: Todo) => !todo.completed);\n      default:\n        return todos;\n    }\n  };\n\n  return (\n    <>\n      {\n        filter.query && !visibleTodos().length && (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )\n      }\n      <table className=\"table is-narrow is-fullwidth\">\n        {\n          !!visibleTodos().length && (\n            <thead>\n              <tr>\n                <th>#</th>\n\n                <th>\n                  <span className=\"icon\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </th>\n\n                <th>Title</th>\n                <th> </th>\n              </tr>\n            </thead>\n          )\n        }\n        <tbody>\n          {visibleTodos().map((todo: Todo) => {\n            return (\n              <tr\n                key={todo.id}\n                data-cy=\"todo\"\n              >\n                <td className=\"is-vcentered\">{todo.id}</td>\n                <td className=\"is-vcentered\"> </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={\n                    todo.completed\n                      ? 'has-text-success' : 'has-text-danger'\n                  }\n                  >\n                    {todo.title}\n\n                  </p>\n                </td>\n\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      dispatch(actions.setTodo(todo));\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className={`far ${isSelected(todo.id) ? 'fa-eye-slash' : 'fa-eye'}`} />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const filter = useAppSelector(state => state.filter);\n  const setFilter = (value: string) => {\n    switch (value) {\n      case 'active':\n        return dispatch(actions.active(filter.query));\n      case 'completed':\n        return dispatch(actions.completed(filter.query));\n      default:\n        return dispatch(actions.all(filter.query));\n    }\n  };\n\n  const setInput = (value: string) => {\n    return dispatch(actions.input(value.toLowerCase()));\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={filter.query}\n          onChange={(e) => {\n            setInput(e.target.value);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {filter.query\n            && (\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={() => {\n                  setInput('');\n                }}\n              />\n            )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const currentTodo = useAppSelector((state) => state.currentTodo);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!currentTodo ? <Loader /> : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {currentTodo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                dispatch(actions.removeTodo());\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo.title}</p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {!currentTodo.completed\n                ? <strong className=\"has-text-danger\">Planned</strong>\n                : <strong className=\"has-text-success\">Done</strong>}\n              {' by '}\n              <a href=\"mailto:Sincere@april.biz\">Leanne Graham</a>\n            </p>\n          </div>\n        </div>\n      )}\n\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\n\nexport const App: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const [isLoading, setIsLoading] = useState(true);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    const todosFetch = async () => {\n      try {\n        setIsLoading(true);\n        const result = await getTodos();\n\n        dispatch(actions.setTodos(result));\n      } catch (error) {\n        throw new Error(String(error));\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    todosFetch();\n  }, []);\n\n  return (\n    <>\n      {isLoading ? <Loader />\n        : (\n          <div className=\"section\">\n            <div className=\"container\">\n              <div className=\"box\">\n                <h1 className=\"title\">Todos:</h1>\n\n                <div className=\"block\">\n                  <TodoFilter />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList />\n                </div>\n              </div>\n            </div>\n          </div>\n\n        )}\n      {currentTodo\n        && (\n          <TodoModal />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}